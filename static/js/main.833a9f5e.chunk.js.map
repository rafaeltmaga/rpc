{"version":3,"sources":["styles.js","utils.js","index.js","App.js"],"names":["styled","div","sortAndGroup","list","sort","compareAlphabetical","reduce","re","o","existObj","find","obj","id","programa","shows","push","show","name","time_start","time_end","custom_info","map","item","compareTime","a","b","network","networkA","charAt","networkB","comparison","timeA","moment","time","timeB","ReactDOM","render","useState","format","date","setDate","setList","formatDate","splitDate","split","handleFetchSchedule","useCallback","axios","url","method","res","console","log","data","programme","entries","title","status","newList","media_id","human_start_time","human_end_time","alert","useEffect","length","src","alt","className","mask","alwaysShowMask","maskChar","type","value","onChange","event","target","key","document","getElementById"],"mappings":"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","file":"static/js/main.833a9f5e.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport default styled.div`\r\n\tbox-sizing: border-box;\r\n\twidth: 100%;\r\n\tfont-family: 'Montserrat', sans-serif;\r\n\tpadding: 40px;\r\n\ttext-align: center;\r\n\tbackground-color: #fff;\r\n\r\n\th1 {\r\n\t\tfont-size: 3em;\r\n\t\tcolor: #fff;\r\n\t}\r\n\r\n\t.logo-rpc {\r\n\t\tfloat: left;\r\n\t\tpadding: 3px;\r\n\t}\r\n\r\n\t.logo-da-globo {\r\n\t\tfloat: right;\r\n\t\tpadding: 3px;\r\n\t}\r\n\r\n\t.date {\r\n\t\tbackground-color: #393939;\r\n\t\tpadding: 15px;\r\n\t\tborder-radius: 8px;\r\n\t\ttext-align: left;\r\n\t\tcolor: #ffffff;\r\n\r\n\t\t.date__input {\r\n\t\t\tborder: 0;\r\n\t\t\toutline: none;\r\n\t\t\tpadding: 15px;\r\n\t\t\tfont-size: 16px;\r\n\t\t\tfont-weight: 700;\r\n\t\t\tborder-radius: 8px;\r\n\t\t\tcolor: #000000;\r\n\t\t}\r\n\t}\r\n\r\n\t.schedule {\r\n\t\tlist-style: none;\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\t\tcolor: white;\r\n\t\ttext-align: left;\r\n\r\n\t\t&__network {\r\n\t\t\t&:nth-child(even) {\r\n\t\t\t\tbackground: #006497;\r\n\t\t\t\t&:hover {\r\n\t\t\t\t\tbackground: #c9c9c9;\r\n\t\t\t\t\tcolor: red;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t&:nth-child(odd) {\r\n\t\t\t\tbackground: #ec7d00;\r\n\t\t\t\t&:hover {\r\n\t\t\t\t\tbackground: #c9c9c9;\r\n\t\t\t\t\tcolor: red;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t&__shows {\r\n\t\t\tlist-style: none;\r\n\t\t\tmargin: 0;\r\n\t\t\tpadding: 0;\r\n\t\t}\r\n\t}\r\n\r\n\theader {\r\n\t\tbackground-color: #006497;\r\n\t}\r\n\r\n\tbody {\r\n\t\tbackground-color: #fff;\r\n\t}\r\n`;\r\n","import moment from 'moment'\r\n\r\nexport const sortAndGroup = list => {\r\n    const sorted = list.sort(compareAlphabetical)\r\n\r\n    const res = sorted.reduce((re, o) => {\r\n        const existObj = re.find(obj => {\r\n            return obj.id === o.programa.id\r\n        })\r\n        if (existObj) {\r\n            existObj.shows.push(o.show)\r\n        } else {\r\n            re.push({\r\n                id: o.programa.id,\r\n                name: o.programa.name,\r\n                time_start: o.programa.time_start,\r\n                time_end: o.programa.time_end,\r\n                shows: [o.custom_info],\r\n            })\r\n        }\r\n        return re\r\n    }, [])\r\n\r\n    const ordered = res.map(item => {\r\n        item.shows = item.shows.sort(compareTime)\r\n        return item\r\n    })\r\n\r\n    return ordered\r\n}\r\n\r\nfunction compareAlphabetical(a, b) {\r\n    if (a.network && b.network) {\r\n        const networkA = a.network.name.charAt(0)\r\n        const networkB = b.network.name.charAt(0)\r\n\r\n        let comparison = 0\r\n        if (networkA > networkB) {\r\n            comparison = 1\r\n        } else if (networkA < networkB) {\r\n            comparison = -1\r\n        }\r\n        return comparison\r\n    }\r\n    return null\r\n}\r\n\r\nfunction compareTime(a, b) {\r\n    const timeA = moment(a.time, 'HH:mm')\r\n    const timeB = moment(b.time, 'HH:mm')\r\n\r\n    let comparison = 0\r\n    if (timeA > timeB) {\r\n        comparison = 1\r\n    } else if (timeA < timeB) {\r\n        comparison = -1\r\n    }\r\n    return comparison\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","import React, { useEffect, useState, useCallback } from 'react';\nimport moment from 'moment';\nimport axios from 'axios';\n\nimport InputMask from 'react-input-mask';\nimport Container from './styles';\nimport { sortAndGroup } from './utils';\n\nexport default function() {\n\tconst [ date, setDate ] = useState(moment().format('DD/MM/YYYY'));\n\tconst [ list, setList ] = useState([]);\n\n\tconst formatDate = (date) => {\n\t\tconst splitDate = date.split('/');\n\t\treturn `${splitDate[2]}-${splitDate[1]}-${splitDate[0]}`;\n\t};\n\tconst handleFetchSchedule = useCallback(async (date) => {\n\t\ttry {\n\t\t\tconst res = await axios({\n\t\t\t\turl: `https://cors-anywhere.herokuapp.com/https://epg-api.video.globo.com/programmes/1337?date=${formatDate(\n\t\t\t\t\tdate\n\t\t\t\t)}`,\n\t\t\t\tmethod: 'GET'\n\t\t\t});\n\t\t\tconsole.log(res.data.programme.entries[0]);\n\t\t\tconsole.log(res.data.programme.entries[0].title);\n\n\t\t\tif (res.status === 200) {\n\t\t\t\tconst newList = res.data.programme.entries.map((item) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tprograma: {\n\t\t\t\t\t\t\tid: item.media_id,\n\t\t\t\t\t\t\tname: item.title,\n\t\t\t\t\t\t\ttime_start: moment(item.human_start_time, 'HH:mm:ss Z').format('HH:mm'),\n\t\t\t\t\t\t\ttime_end: moment(item.human_end_time, 'HH:mm:ss Z').format('HH:mm')\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tconsole.log(newList);\n\t\t\t\treturn setList(sortAndGroup(newList));\n\t\t\t}\n\n\t\t\tsetList([]);\n\t\t} catch (e) {\n\t\t\talert('Data inválida');\n\t\t}\n\t}, []);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (date.length === 10) {\n\t\t\t\thandleFetchSchedule(date);\n\t\t\t}\n\t\t},\n\t\t[ handleFetchSchedule, date ]\n\t);\n\n\treturn (\n\t\t<Container>\n\t\t\t<header>\n\t\t\t\t<img src=\"/logo-rpc.png\" alt=\"Logo RPC \" className=\"logo-rpc\" />\n\t\t\t\t<img src=\"/logo-da-globo.png\" alt=\"Logo GLobo \" className=\"logo-da-globo\" />\n\t\t\t\t<h1>Programação diária RPC</h1>\n\t\t\t</header>\n\t\t\t<body>\n\t\t\t\t<div className=\"date\">\n\t\t\t\t\t<p>Digite a data a ser pesquisada:</p>\n\t\t\t\t\t<InputMask\n\t\t\t\t\t\tmask=\"99/99/9999\"\n\t\t\t\t\t\talwaysShowMask={true}\n\t\t\t\t\t\tmaskChar=\"\"\n\t\t\t\t\t\tclassName=\"date__input\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tid=\"date\"\n\t\t\t\t\t\tname=\"date\"\n\t\t\t\t\t\tvalue={date}\n\t\t\t\t\t\tonChange={(event) => setDate(event.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{list.length > 0 ? (\n\t\t\t\t\t<ul className=\"schedule\">\n\t\t\t\t\t\t{list.map((item) => (\n\t\t\t\t\t\t\t<li className=\"schedule__network\" key={item.id}>\n\t\t\t\t\t\t\t\t<ul className=\"schedule__shows\">\n\t\t\t\t\t\t\t\t\t<h3>{item.name}</h3>\n\t\t\t\t\t\t\t\t\t<li className=\"schedule__show\" key={item.media_id}>\n\t\t\t\t\t\t\t\t\t\t{item.time_start} - {item.time_end}\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t) : (\n\t\t\t\t\t<div className=\"empty_schedule\">Nenhuma programação encontrada para este dia</div>\n\t\t\t\t)}\n\t\t\t</body>\n\t\t</Container>\n\t);\n}\n"],"sourceRoot":""}